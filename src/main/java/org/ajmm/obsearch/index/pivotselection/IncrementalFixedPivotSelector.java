package org.ajmm.obsearch.index.pivotselection;

import org.ajmm.obsearch.Index;
import org.ajmm.obsearch.exception.OBException;
import org.ajmm.obsearch.exception.OBStorageException;
import org.ajmm.obsearch.exception.PivotsUnavailableException;
import org.ajmm.obsearch.index.IncrementalPivotSelector;

import cern.colt.list.IntArrayList;

public class IncrementalFixedPivotSelector
         implements IncrementalPivotSelector {

    /**
     * Pre-computed pivot definitions
     */
    
    public static int[] levScalab = {94323, 63655, 37558, 34472, 54433, 88958, 97696, 88615, 93960, 93739, 97697, 20414, 34162, 21023, 66357, 65775, 74077, 74498, 69404, 75965, 31607, 55316, 91240, 326, 10456, 41388, 64728, 39269, 63582, 54810};

    // 30 pivots for ted
    public static int[] ted =  {57300, 196436, 10653, 136029, 203654, 189753,
         152060, 133273, 236109, 144716, 30129, 192050, 14036, 28810, 202543,
         59154, 123211, 203986, 5279, 118146, 75130, 135862, 200942, 92282, 77436,
         110657, 116055, 37261, 94338, 235642};
    // 30 pivots + .95 (10 levels, only 9 used).
    public static int[][] tedLevel = {
        
        {173657, 70186, 179816, 207071, 130454, 185028, 27265, 162232, 224744, 43960, 228484, 150318, 133907, 183190, 139124, 60921, 45378, 166624, 16311, 27020, 186932, 210470, 146959, 85057, 35125, 197035, 18060, 163155, 193350, 198286},
        {207780, 114683, 62565, 227946, 131650, 129464, 204855, 228831, 59601, 201723, 895, 66099, 85665, 76883, 165182, 201406, 136797, 48398, 216620, 101906, 117179, 59975, 153350, 95227, 159095, 137598, 208546, 11095},
        {122676, 243898, 105587, 33926, 32145, 95063, 38047, 30042, 136364, 236094, 234065, 3696, 169085, 37920, 221285, 234532, 234999, 188950, 52152, 181980, 97682, 61218, 139534, 112125, 47529, 80086},
        {20533, 53251, 168211, 237400, 235538, 4380, 56387, 238298, 42999, 148591, 22757, 68746, 170561, 97312, 93760, 143438, 45923, 162250, 68496, 220668, 40531, 128417, 111022, 31040},
        {82856, 100620, 205803, 136245, 129672, 208940, 197946, 79103, 165594, 47601, 3370, 200820, 180839, 111443, 20648, 177744, 5854, 22571, 182754, 141994, 83415, 9451},
        {180214, 196615, 120287, 218294, 92721, 176989, 213216, 134365, 6703, 126522, 238000, 139883, 163541, 59692, 122527, 168679, 236357, 104736, 215349, 4410},
        {783, 147397, 64225, 216984, 53067, 2832, 191830, 239193, 14211, 12796, 133363, 161270, 163185, 163932, 93022, 218982, 190334, 118743, 41551},
        {18754, 216129, 13947, 28376, 190493, 116070, 146923, 230027, 113755, 40603, 2986, 102719, 223748, 226800, 180570, 75229, 50622, 140739},
        {2551, 206440, 181307, 98873, 229749, 59728, 124579, 201214, 44390, 42423, 17288, 188709, 162348, 102960, 236843, 82917, 200719},
        {172805, 20442, 78096, 195205, 137568, 175569, 195478, 85391, 126313, 77016, 186647, 15830, 166568, 143717, 127874, 218412},
        
    };
    // lev pivots (18 pivots for lev)
    
    public static int [] lev = { 992515, 828447, 708572, 879139, 679767, 356148, 23230, 263566, 744140, 507502, 855677, 749056, 908433, 864534, 754452, 301782, 552141, 103224};

    public static int [][] levLevel = { 
        {992316, 405315, 721966, 850092, 163932, 47113, 624547, 625026, 857504, 473406, 785269, 858005, 55829, 363803, 591228, 814583, 299929, 683399},
        {395006, 800848, 992359, 165724, 238112, 523984, 191257, 229295, 229266, 757516, 73494, 541124, 301782, 555629, 624227, 553970, 546464},
        {355815, 517393, 429050, 344504, 282655, 490669, 466620, 539612, 866049, 506134, 993156, 983808, 781464, 422685, 871406, 605017},
        {138781, 937714, 843316, 285526, 106044, 948402, 2098, 905359, 685163, 857504, 624288, 321874, 876559, 887469, 18843},
        {428597, 584831, 463252, 791267, 910050, 793711, 641866, 910218, 40579, 870290, 955569, 198249, 74473, 525787},
        {429041, 482882, 802292, 607524, 788646, 595296, 984845, 29348, 864562, 271879, 427230, 681523, 350428},
        {993205, 82115, 237862, 188255, 20414, 604416, 538071, 776840, 2001, 362136, 750745, 514440},
        {992537, 833676, 301971, 867517, 290161, 506692, 727581, 423088, 509094, 528868, 232835},
        {123279, 530530, 800734, 9878, 186602, 992663, 382075, 42792, 584374, 228068}        
    };
    
    // 16 pivots for mtd
    public static int [] mtd = {173221, 81425, 258192, 229333, 256964, 187123, 211523, 143917, 28954, 262061, 86748, 218554, 113214, 260088, 337932, 11769};
    
    public static int [][] mtdLevel = {
        {274102, 324945, 209399, 243038, 145521, 115966, 301917, 22355, 159898, 270492, 243574, 183907, 112928, 119611, 239356, 62910},
        {201112, 344312, 106176, 334999, 318317, 347140, 12445, 97557, 14626, 234591, 328454, 145748, 294429, 250258, 124128},
        {297177, 224961, 220241, 245855, 102475, 211275, 75368, 81709, 208727, 276198, 186156, 324391, 44427, 220349},
        {335083, 260487, 130357, 167197, 295865, 256212, 48917, 55704, 321320, 83201, 129847, 195238, 17465},
        {104544, 55633, 231097, 198116, 208539, 132611, 185872, 325576, 283318, 40264, 110416, 283455},
        {293310, 75336, 259053, 78903, 161112, 24788, 218003, 233283, 274213, 253021, 233869},
        {249516, 237118, 58030, 197452, 129191, 263231, 318006, 120710, 225972, 268451},
        {290063, 203128, 299274, 177463, 152783, 41869, 113489, 140798, 192498},
        {300235, 101414, 180903, 251844, 281506, 156550, 234838, 300972},
        {177690, 208057, 347702, 114857, 147783, 285109, 205583}
    };
    
    
    int [][] data;
    int ind = 0; // next level
    public IncrementalFixedPivotSelector(int [] ids){
        data = new int[1][];
        data[0] = ids;
    }
    
    public IncrementalFixedPivotSelector(int [][] ids){
        data = ids;
    }
    
    @Override
    public int[] generatePivots(short pivotCount, Index index)
            throws OBException, IllegalAccessException, InstantiationException,
            OBStorageException, PivotsUnavailableException {
        return generatePivots(pivotCount, null,null);
    }

    @Override
    public int[] generatePivots(short pivotCount, IntArrayList elements,
            Index index) throws OBException, IllegalAccessException,
            InstantiationException, OBStorageException,
            PivotsUnavailableException {
        int[] res = new int[pivotCount];
        int i = 0;
        while (i < res.length) {            
            res[i] = data[ind][i];
            i++;
        }
        ind++;
        return res;
    }

}
